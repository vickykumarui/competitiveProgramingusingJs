class BinaryHeap{
    constructor(){
        this.values = [];
    }

    insert(val){

        this.values.push(val); // push the value at end of list
        let lengthOfBinaryHeap = this.values.length;
        if(lengthOfBinaryHeap === 1) return this.values; // if it was first element we are done

        // bubble the new element to its correct position
        let currIndex = lengthOfBinaryHeap - 1;
        
        let swapNext = true;
        while(swapNext){
            let parentIndex = Math.floor((currIndex - 1)/2);

        if(val > this.values[parentIndex]){
     [this.values[currIndex],this.values[parentIndex]] =[this.values[parentIndex],this.values[currIndex]];
                 currIndex = parentIndex;

                 if(currIndex === 0) swapNext = false;
            } else{
                swapNext = false;
            }
        }

        return this.values;
    }
}