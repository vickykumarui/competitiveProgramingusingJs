
class Node{
    constructor(value){
        this.val = value;
        this.next = null;
    }
}


class SinglyLinkedList{
    constructor(){
        this.head = null;
        this.tail = null;
        this.length = 0
    }

    push(val){
       let newNode = new Node(val);
           if(!this.head){
           this.head = newNode;
           this.tail = newNode;
       } else{
           this.tail.next = newNode;
           this.tail = newNode;
       }
       this.length += 1;
       return this;
    }

    traverse(){
       let current = this.head;

       while(!current){
           console.log(current.val);
           current = current.next;
       }
    }

    pop(){
       

        if(!this.head){
            return undefined
        }
        let prevItem = this.head;
        let currItem = this.head;
        if(this.length === 1){
            this.head = null;
            this.tail = null;
            this.length = 0;
            return currItem;
        }
        
        while(currItem.next){
            prevItem = currItem;
           currItem = currItem.next;
        }

        this.tail = prevItem;
        this.tail.next = null;

        this.length -= 1;
        return currItem;
    }

    
    traverse(){
        let current = this.head;

        while(current){
            console.log(current.val);
            current = current.next;
        }
    }
}

let myList = new SinglyLinkedList()

myList.push('vicky');
myList.push('vivek');
myList.push('vikram');
myList.push('Vikash');
console.log(myList);
myList.traverse();