class HashTables{
    constructor(size = 553){
        this.keyMap = new Array(size);
    }


_hash(key) {
    let total = 0;
    let WEIRD_PRIME = 31;
    for(let i = 0; i < Math.min(key.length, 100); i++) {
        let char = key[i];
        let value = char.charCodeAt(0) - 96;
        total = (total * WEIRD_PRIME + value) % this.keyMap.length;
    }

    return total;
}

set(key, value){

    let index = this._hash(key);
    if(!this.keyMap[index]){
        this.keyMap[index] = [];
       
    }
     this.keyMap[index].push([key,value]);

        return index;
}

get(key){
        let index = this._hash(key);

        if(this.keyMap[index]){
            for(i =0; i< this.keyMap[index].length; i++){
                if(this.keyMap[index][i][0] === key){
                    return this.keyMap[index];
                }
            }
        }

        return undefined;
}

}

let ht = new HashTables()

ht.set("maroon","#8999999")
ht.set("yellow","#8199999")
ht.set("olive","08999999")
ht.set("salmon","#8999299")
ht.set("lightcoral","#9999999")
ht.set("plum","#8997999")
